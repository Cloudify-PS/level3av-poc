
#Define the VC-4 home folder on the disk here.  The install script should fill this in correctly
Define CRESTRON_VC_4_HOME /opt/crestron//virtualcontrol/

#This variable represents the web root
Define CRESTRON_VC_4_WEBROOT /VirtualControl

#Turn on debugs if needed by uncommenting the line below
#LogLevel debug rewrite:trace5

RewriteEngine  on

#Provide Aliases for various folders
AliasMatch "^${CRESTRON_VC_4_WEBROOT}/Rooms/([^/]+)/Html(.*)" "${CRESTRON_VC_4_HOME}/RunningPrograms/$1/Html$2"
AliasMatch "^${CRESTRON_VC_4_WEBROOT}/Rooms/([^/]+)/XPanel(.*)" "${CRESTRON_VC_4_HOME}/RunningPrograms/$1/XPanel$2"
AliasMatch "^${CRESTRON_VC_4_WEBROOT}/ProgramLibrary/([^/]+)/Project(.*)" "${CRESTRON_VC_4_HOME}/ProgramLibrary/$1/Project$2"
AliasMatch "^${CRESTRON_VC_4_WEBROOT}/ProgramLibrary/([^/]+)/Mobility(.*)" "${CRESTRON_VC_4_HOME}/ProgramLibrary/$1/Mobility$2"
AliasMatch "^/Device/UserInterfaceConfig" "${CRESTRON_VC_4_HOME}/webui-status/dynamicElements/THOMAS_EDISON/UserInterfaceConfig.json"

AliasMatch "^${CRESTRON_VC_4_WEBROOT}/config/docs/VirtualControlManual.pdf" "${CRESTRON_VC_4_HOME}/doc/VirtualControlManual.pdf"

# added to allow browsing of the device_resolution.cfg file for authenticated users
AliasMatch "^${CRESTRON_VC_4_WEBROOT}/config/docs/device_resolution.cfg" "${CRESTRON_VC_4_HOME}/conf/device_resolution.cfg"

#Allow access to individual directories
<Directory  ${CRESTRON_VC_4_HOME}/doc>
  Options Indexes FollowSymLinks MultiViews
  Require all granted
</Directory>

<Directory ${CRESTRON_VC_4_HOME}/>
  AllowOverride All
  Require all denied
</Directory>

#Allow access to individual directories
<Directory  ${CRESTRON_VC_4_HOME}/RunningPrograms>
  Options Indexes FollowSymLinks MultiViews
  Require all granted
</Directory>

<Directory  ${CRESTRON_VC_4_HOME}/ProgramLibrary>
  Options Indexes FollowSymLinks MultiViews
  Require all granted
</Directory>

<Directory  ${CRESTRON_VC_4_HOME}/webui-status>
  Options Indexes FollowSymLinks MultiViews
  Require all granted
</Directory>

<Directory  ${CRESTRON_VC_4_HOME}/webui-settings>
  Options Indexes FollowSymLinks MultiViews
  Require all granted
</Directory>

# added to allow browsing of the device_resolution.cfg file for authenticated users
<Directory  ${CRESTRON_VC_4_HOME}/conf/device_resolution.cfg>
  Options Indexes FollowSymLinks MultiViews
  Require all granted
</Directory>

AliasMatch "(?i)^${CRESTRON_VC_4_WEBROOT}/config/status(.*)" "${CRESTRON_VC_4_HOME}/webui-status$1"
AliasMatch "(?i)^${CRESTRON_VC_4_WEBROOT}/config/settings(.*)" "${CRESTRON_VC_4_HOME}/webui-settings$1"

RewriteEngine  on

<Directory ${CRESTRON_VC_4_HOME}/webui-status>
  RewriteCond %{REQUEST_FILENAME} !-f
  RewriteCond %{REQUEST_FILENAME} !-d
  # Angular reroute - This section will be taken out
  RewriteRule ^webView(.*) "${CRESTRON_VC_4_WEBROOT}/config/status" [R]
</Directory>

<Directory ${CRESTRON_VC_4_HOME}/webui-settings>
  RewriteCond %{REQUEST_FILENAME} !-f
  RewriteCond %{REQUEST_FILENAME} !-d
  # Angular reroute - This section will be taken out
  RewriteRule ^webView(.*) "${CRESTRON_VC_4_WEBROOT}/config/settings" [R]
</Directory>

#Proxy configuration.  Redirect API calls to Web App
<Proxy *>
	Order deny,allow
	Allow from all
</Proxy>
ProxyPreserveHost On

<Location ${CRESTRON_VC_4_WEBROOT}/config/settings/>
   SSLRequireSSL
   AuthType Basic
   AuthName "PAM Authentication"
   AuthBasicProvider PAM
   AuthPAMService httpd-auth-settings
   Require valid-user
</Location>
<Location ${CRESTRON_VC_4_WEBROOT}/config/status/>
   SSLRequireSSL
   AuthType Basic
   AuthName "PAM Authentication"
   AuthBasicProvider PAM
   AuthPAMService httpd-auth-status
   Require valid-user
</Location>

<Location ${CRESTRON_VC_4_WEBROOT}/config/docs/>
   SSLRequireSSL
   AuthType Basic
   AuthName "PAM Authentication"
   AuthBasicProvider PAM
   AuthPAMService httpd-auth-status
   Require valid-user
</Location>


SetEnvIf Authorization "(.*)" HTTP_AUTHORIZATION=$1   
AliasMatch "^/cws/websocket/getWebSocketToken" "${CRESTRON_VC_4_HOME}/CrestronApps/websocket/getWebSocketToken"


<Directory ${CRESTRON_VC_4_HOME}/CrestronApps>
  Require all granted
  RewriteRule "^/cws/websocket/getWebSocketToken" "/cws/websocket/getWebSocketToken" [PT,H=${CRESTRON_VC_4_HOME}/var/run/app-websocket.socket|fcgi://localhost/cws]
</Directory>

<Location /cws/websocket/getWebSocketToken>
  SSLRequireSSL
  AuthType Basic
  AuthName "PAM Authentication"
  AuthBasicProvider PAM
  AuthPAMService httpd-auth-settings
  Require valid-user
</Location>

<Directory  ${CRESTRON_VC_4_HOME}/RunningPrograms>
  SSLRequireSSL
  AuthType Basic
  AuthName "PAM Authentication"
  AuthBasicProvider PAM
  AuthPAMService httpd-auth-settings
  Require valid-user
</Directory>

#Adjust cws
AliasMatch "^${CRESTRON_VC_4_WEBROOT}/Rooms/([^/]+)/cws/(.*)" "${CRESTRON_VC_4_HOME}/CrestronApps/$1/$2"
<Directory ${CRESTRON_VC_4_HOME}/CrestronApps>
  Require all granted
  RewriteRule "^([^/]+)/(.*)" "/cws/$2" [PT,E=MATCH_ROOM_ID:$1,H=proxy:unix:${CRESTRON_VC_4_HOME}/var/run/app-$1.socket|fcgi://localhost/cws]
</Directory>

# Enable request processing
SecRuleEngine On
# enable inspection of request bodies
SecRequestBodyAccess On
# set actual request size limit
SecRequestBodyLimit 134217728
# actually generate an HTTP error, instead of truncating
SecRequestBodyLimitAction Reject

# Settings api redirect
<Location "${CRESTRON_VC_4_WEBROOT}/config/settings/WebApi/">
      ProxyPass "http://127.0.0.1:5000/"
      ProxyPassReverse "http://127.0.0.1:5000/"
      Header set Cache-Control "max-age=0, no-cache, no-store, must-revalidate, private"
      Header set Pragma "no-cache"
</Location>

# Status api redirect
<Location "${CRESTRON_VC_4_WEBROOT}/config/status/WebApi/">
      ProxyPass "http://127.0.0.1:5000/"
      ProxyPassReverse "http://127.0.0.1:5000/"
      Header set Cache-Control "max-age=0, no-cache, no-store, must-revalidate, private"
      Header set Pragma "no-cache"
</Location>

<LocationMatch "^${CRESTRON_VC_4_WEBROOT}/config/api/(.*)">
  ProxyPass "http://127.0.0.1:5000/api/$1"
  ProxyPassReverse "http://127.0.0.1:5000/api/$1"
  Header set Cache-Control "max-age=0, no-cache, no-store, must-revalidate, private"
  Header set Pragma "no-cache"
</LocationMatch>

SecRule REQUEST_METHOD "@rx ^(?:POST|PUT)$" \
        "phase:1 \
        id:400101 \
        chain"
        SecRule REQUEST_URI "@contains ProgramLibrary" \
               "t:none,\
               ctl:requestBodyLimit=1073741824"

SecRule REQUEST_METHOD "@rx ^(?:POST|PUT)$" \
        "phase:1 \
        id:400102 \
        chain"
        SecRule REQUEST_URI "@contains ProgramLibrary" \
               "t:none,\
               ctl:ruleRemoveById=200003"

SSLProxyEngine On
SSLProxyCheckPeerCN off
SSLProxyCheckPeerName off

<LocationMatch "/Debug/(.*)">
    Require all granted
     RewriteEngine On
     RewriteCond %{REQUEST_URI} ^/Debug/$1 [NC,OR]
     RewriteCond ${HTTP:UPGRADE} websocket [NC,OR]
     RewriteCond ${HTTP:CONNECTION} upgrade [NC]
     RewriteRule .* "wss://127.0.0.1:49300/$1" [P,L]
     RewriteRule "/Debug/(.*)" "wss://localhost:49300/$1" [P,L]
     RewriteRule "/Debug/(.*)" "https://localhost:49300/$1" [P,L]
</LocationMatch>