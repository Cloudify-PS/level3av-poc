tosca_definitions_version: cloudify_dsl_1_3

description: Trustgrid deployment using Terraform

imports:
  - http://cloudify.co/spec/cloudify/6.3.0/types.yaml
  - plugin:cloudify-terraform-plugin

inputs:

  deployment_version:
    type: string
    display_label: Deployment version
    default: trustgrid-dev
    description: |
      The version of Trustgrid deployment. Accepted values are:
      trustgrid-dev, 
      trustgrid-prod.
    constraints:
      - valid_values:
        - "trustgrid-dev"
        - "trustgrid-prod"

  aws_region:
    type: string
    display_label: AWS Region
    default: "us-west-2"
    description: AWS Region to deploy the infrastructure into.
    constraints:
      - valid_values:
        - us-east-1
        - us-east-2
        - us-west-1
        - us-west-2
        - eu-central-1
        - eu-west-1
        - eu-west-2
        - eu-south-1
        - eu-west-3
        - eu-north-1
        - af-south-1
        - ap-east-1
        - ap-south-1
        - ap-northeast-3
        - ap-northeast-2
        - ap-southeast-1
        - ap-southeast-2
        - ap-northeast-1
        - ca-central-1
        - cn-north-1
        - cn-northwest-1
        - me-south-1
        - sa-east-1

  certificate-private_key:
    type: string
    display_label: Certificate Private Key
    default: { get_secret: certificate-private_key }

  certificate-ssc:
    type: string
    display_label: Certificate SSC
    default: { get_secret: certificate-ssc }

  certificate-ca_bundle:
    type: string
    display_label: Certificate CA Bundle
    default: { get_secret: certificate-ca_bundle }

  aws_vpc_ssh_public_key_prod:
    type: string
    display_label: AWS VPC Public Key Prod
    description: >
      SSH Public Key for VPC in AWS. Valid only when 'trustgrid-prod' 
      deployment version chosen. Otherwise ignored.
    default: { get_secret: aws_vpc_ssh_public_key_prod }

  aws_vpc_ssh_public_key_dev:
    type: string
    display_label: AWS VPC Public Key Dev
    description: >
      SSH Public Key for VPC in AWS. Valid only when 'trustgrid-dev' 
      deployment version chosen. Otherwise ignored.
    default: { get_secret: aws_vpc_ssh_public_key_dev }

  node_license-prod-01:
    type: string
    display_label: Node License - Prod 01
    description: >
      Node license for production node. Valid only when 'trustgrid-prod' 
      deployment version chosen. Otherwise ignored.
    default: { get_secret: node_license-prod }

  node_license-prod-02:
    type: string
    display_label: Node License - Prod 02
    description: >
      Node license for production node. Valid only when 'trustgrid-prod' 
      deployment version chosen. Otherwise ignored.
    default: { get_secret: node_license-prod }

  node_license-dev-01:
    type: string
    display_label: Node License - Dev 01
    description: >
      Node license for development node. Valid only when 'trustgrid-dev' 
      deployment version chosen. Otherwise ignored.
    default: { get_secret: node_license-dev }

  node_license-dev-02:
    type: string
    display_label: Node License - Dev 02
    description: >
      Node license for development node. Valid only when 'trustgrid-dev' 
      deployment version chosen. Otherwise ignored.
    default: { get_secret: node_license-dev }

  aws_access_key_id:
    type: string
    hidden: true
    default: { get_secret: aws_access_key_id }

  aws_secret_access_key:
    type: string
    hidden: true
    default: { get_secret: aws_secret_access_key }


node_templates:

  terraform:
    type: cloudify.nodes.terraform
    properties:
      resource_config:
        use_existing_resource: false

  # terraform_login_token:
  #   type: cloudify.nodes.Root
  #   interfaces:
  #     cloudify.interfaces.lifecycle:
  #       start:
  #         implementation: trustgrid/scripts/store_terraform_token.sh
  #         executor: central_deployment_agent
  #         inputs:
  #           terraform_token: { get_secret: terraform_token }
  #       stop:
  #         implementation: trustgrid/scripts/remove_terraform_token.sh
  #         executor: central_deployment_agent
  #   relationships:
  #     - type: cloudify.relationships.depends_on
  #       target: terraform

  trustgrid:
    type: cloudify.nodes.terraform.Module
    properties:
      resource_config:
        source:
          location: trustgrid/resources/iac-private_cloud-main.zip
        source_path:
          concat:
            - "iac-private_cloud-main/"
            - { get_input: deployment_version }
        environment_variables:
          AWS_ACCESS_KEY_ID: { get_input: aws_access_key_id }
          AWS_SECRET_ACCESS_KEY: { get_input: aws_secret_access_key }
          AWS_DEFAULT_REGION: { get_input: aws_region }
        variables:
          aws_region: { get_input: aws_region }
          certificate-private_key: { get_input: certificate-private_key }
          certificate-ssc: { get_input: certificate-ssc }
          certificate-ca_bundle: { get_input: certificate-ca_bundle }
          aws_vpc_ssh_public_key_prod: { get_input: aws_vpc_ssh_public_key_prod }
          aws_vpc_ssh_public_key_dev: { get_input: aws_vpc_ssh_public_key_dev }
          node_license-prod-01: { get_input: node_license-prod-01 }
          node_license-prod-02: { get_input: node_license-prod-02 }
          node_license-dev-01: { get_input: node_license-dev-01 }
          node_license-dev-02: { get_input: node_license-dev-02 }
    relationships:
      - target: terraform
        type: cloudify.terraform.relationships.run_on_host
      # - target: terraform_login_token
      #   type: cloudify.relationships.depends_on

  # trustgrid_api:
  #   type: cloudify.nodes.ServiceComponent
  #   properties:
  #     resource_config:
  #       blueprint:
  #         external_resource: false
  #         id: trustgrid_api
  #         blueprint_archive: https://github.com/Cloudify-PS/level3av-poc/archive/refs/heads/main.zip
  #         main_file_name: trustgrid_api.yaml
  #       deployment:
  #         id: trustgrid_api
  #         auto_inc_suffix: false
  #         inputs:
  #           rest_endpoint: { get_input: rest_endpoint }
  #           user_id: { get_input: user_id }
  #           new_user: { get_input: new_user }
  #           new_user_name: { get_input: new_user_name }
  #           new_user_email: { get_input: new_user_email }
  #   relationships:
  #     - type: cloudify.relationships.depends_on
  #       target: trustgrid
