tosca_definitions_version: cloudify_dsl_1_3

description: Zabbix installation in Kubernetes using Helm

imports:
  - http://cloudify.co/spec/cloudify/6.3.0/types.yaml
  - plugin:cloudify-helm-plugin
  - plugin:cloudify-kubernetes-plugin?version= >=2.13.7

inputs:

  namespace:
    type: string
    display_label: Namespace
    default: monitoring
    description: The namespace to install Zabbix into

  database_endpoint:
    type: string
    display_label: Database Endpoint
    default: zabbix-postgresql
    description: Database endpoint to connect Zabbix to

  database_username:
    type: string
    display_label: Database username
    default: root
    description: Username to connect with Postgres database

  database_password:
    type: string
    display_label: Database password
    default: StR0nGp4sSw0rD
    description: Password to connect with Postgres database

  kubernetes_endpoint:
    type: string
    display_label: Kubernetes API Endpoint
    description: The Kubernetes API endpoint

  kubernetes_token:
    type: string
    display_label: Kubernetes API Token
    description: Service account token for accessing Kubernetes API

  kubernetes_ca_secret:
    type: string
    display_label: Kubernetes Certificate Authority Secret Name
    description: Secret name of PEM encoded CA used to access Kubernetes API

node_templates:

  helm_install:
    type: cloudify.nodes.helm.Binary
    properties:
      use_existing_resource: false
      installation_source: https://get.helm.sh/helm-v3.8.0-linux-amd64.tar.gz

  zabbix_repo:
    type: cloudify.nodes.helm.Repo
    properties:
      resource_config:
        name: celtic
        # repo_url: https://cetic.github.io/helm-charts
        repo_url: https://cfy-anthony.s3.amazonaws.com/charts/
    relationships:
      - target: helm_install
        type: cloudify.helm.relationships.run_on_host

  zabbix_release:
    type: cloudify.nodes.helm.Release
    properties:
      client_config:
        configuration:
          api_options:
            host: { get_input: kubernetes_endpoint }
            api_key: { get_input: kubernetes_token }
            ssl_ca_cert: { get_input: kubernetes_ca_secret }
      resource_config:
        name: zabbix
        chart: celtic/zabbix
        values_file: zabbix-helm/values.yaml
        set_values:
          - name: "db_access.DB_SERVER_HOST"
            value: { get_input: database_endpoint }
          - name: "db_access.POSTGRES_USER"
            value: { get_input: database_username }
          - name: "db_access.POSTGRES_PASSWORD"
            value: { get_input: database_password }
          - name: "zabbixweb.service.type"
            value: LoadBalancer
        flags:
          - name: namespace
            value: { get_input: namespace }
    interfaces:
      cloudify.interfaces.lifecycle:
        start:
          implementation: helm.cloudify_helm.tasks.install_release
          inputs:
            flags:
              - name: create-namespace
    relationships:
      - target: helm_install
        type: cloudify.helm.relationships.run_on_host
      - target: zabbix_repo
        type: cloudify.relationships.depends_on

  zabbix_service_endpoint:
    type: cloudify.kubernetes.resources.Service
    properties:
      client_config:
        configuration:
          api_options:
            host: { get_input: kubernetes_endpoint }
            api_key: { get_input: kubernetes_token }
            ssl_ca_cert: { get_input: kubernetes_ca_secret }
      use_external_resource: true
      definition:
        apiVersion: v1
        kind: Service
        metadata:
          name: zabbix-zabbix-web
          namespace: { get_input: namespace }
    relationships:
      - target: zabbix_release
        type: cloudify.relationships.contained_in

capabilities:
  zabbix_endpoint:
    description: The HTTP endpoint for accessing the Zabbix web interface
    value: { concat: [ "http://", { get_attribute: [ zabbix_service_endpoint, kubernetes, status, load_balancer, ingress, 0, hostname ] } ] }
